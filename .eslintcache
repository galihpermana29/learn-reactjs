[{"C:\\Users\\user\\Desktop\\learn-reactjs\\src\\index.js":"1","C:\\Users\\user\\Desktop\\learn-reactjs\\src\\App.js":"2","C:\\Users\\user\\Desktop\\learn-reactjs\\src\\Navbar.js":"3","C:\\Users\\user\\Desktop\\learn-reactjs\\src\\Home.js":"4"},{"size":432,"mtime":1612329212493,"results":"5","hashOfConfig":"6"},{"size":1471,"mtime":1612350038655,"results":"7","hashOfConfig":"6"},{"size":589,"mtime":1612350738968,"results":"8","hashOfConfig":"6"},{"size":1627,"mtime":1612404190089,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"u7dns0",{"filePath":"13","messages":"14","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"C:\\Users\\user\\Desktop\\learn-reactjs\\src\\index.js",[],["22","23"],"C:\\Users\\user\\Desktop\\learn-reactjs\\src\\App.js",["24","25","26","27","28","29"],"// import './App.css';\nimport Navbar from './Navbar';\nimport Home from './Home';\n\nfunction App() {\n   // jadi pada react, kita buat nya itu komponen, yang mana misal navbar, kita buat jadi sebuah komponen, nah komponen itu kita buat dalam function, contohnya kaya komponen App ini. yang mana didalam function itu, kita bisa menuliskan apapun sintak js sperti biasanya, dan me return sebuah JSX atau html template yang berupa js.\n\n   // jangan lupa untuk bisa merender komponennya kedalam DOM, kita export dulu komponennya, lalu di bagian yang mau kita import, kita import aja komponen tadi. persis kaya js biasa\n   \n   // nah untuk menampilkan data yang dinamis, kita cukup kasih {namaVariabel} pakai kurung kurawal aja. ini bisa digunakan kecuali untuk object dan boolean\n   const user = 'Galih';\n   const greetings = `Halo ${user}`;\n   const age = 19;\n   const prodi = 'Teknik Komputer';\n   const khs = ['A', 'A', 'A'];\n   const ips = 4.0;\n   const univLink = 'https://siam.ub.ac.id/'\n\n\treturn (\n\t\t<div className=\"App\">\n         <Navbar />\n\t\t\t<div className=\"content\">\n            <Home />\n\n\n\n\n\t\t\t\t{/* <h1>Biodata Mahasiswa</h1>\n            <h2>{greetings}</h2>\n            <p>Nama : {user}</p>\n            <p>Umur : {age}</p>\n            <p>Universitas : <a href={univLink} target=\"_blank\">Univ Brawijaya</a></p>\n            <p>Prodi : {prodi}</p>\n            <p>Hasil Studi : {khs}</p>\n            <p>IPS : {ips}</p> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","C:\\Users\\user\\Desktop\\learn-reactjs\\src\\Navbar.js",["30"],"const Navbar = () => {\r\n   return(\r\n      <nav className=\"navbar\">\r\n         <h1>Galih Blog</h1>\r\n         <div className=\"links\">\r\n            <a href=\"\">Home</a>\r\n            {/* inline css using dynamic values sign {} baru didalamnya kirim sebuah js object {{\r\n               stylenya\r\n            }} */}\r\n            <a href=\"/create\" style={{\r\n               color: 'white',\r\n               backgroundColor: '#f1356d',\r\n               borderRadius: '8px',\r\n               padding: '10px'\r\n            }}>New Blog</a>\r\n         </div>\r\n      </nav>\r\n   )\r\n}\r\n\r\n\r\nexport default Navbar;","C:\\Users\\user\\Desktop\\learn-reactjs\\src\\Home.js",["31"],"import { useState } from 'react';\r\nconst Home = () => {\r\n\t// let name = 'Galih';\r\n   // console.log(useState('Galih'))\r\n   \r\n   // Menggunakan useState hook, jadi ketika di klik, akan merubah data yang ada pada htmlnya (misalnya begitu). nah sesuatu yang seperti itu membutuhkan variabel yang reactive, sehingga ketika terjadi perubahan akan merender ulang template html yang sudah ada.\r\n\r\n   // import {useState} from 'react', lalu gunakan useState() seperti function biasa, yang mana dia mereturn sebuah array, value yang pertama adalah parameternya dan value yang kedua adalah function yang bisa merubah value yang pertama itu. seperti di bawah ini\r\n   // let [name, setName] = useState('Galih');\r\n\t// const handleClickOne = (e) => {\r\n\t// \tsetName('Permana');\r\n   // };\r\n\r\n   const [blogs, setBlogs] = useState([\r\n      { title: 'My new website', body: 'lorem ipsum...', author: 'mario', id: 1 },\r\n      { title: 'Welcome party!', body: 'lorem ipsum...', author: 'yoshi', id: 2 },\r\n      { title: 'Web dev top tips', body: 'lorem ipsum...', author: 'mario', id: 3 }\r\n    ])\r\n\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n         {blogs.map((blog) => (\r\n           <div className=\"blog-preview\" key={blog.id}>\r\n              <h2>{blog.title}</h2>\r\n              <p>Written by {blog.author} </p>\r\n           </div>\r\n         ))}\r\n\t\t\t{/* <p>{name}</p> */}\r\n\t\t\t{/* if the function doesnt passing an argument */}\r\n\t\t\t{/* <button onClick={handleClickOne}>Click Me</button> */}\r\n\t\t\t{/* <button onClick={(e) => {\r\n            handleClickTwo('Galih', e)\r\n         }}>Click Me Again</button> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":12,"column":10,"nodeType":"38","messageId":"39","endLine":12,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":13,"column":10,"nodeType":"38","messageId":"39","endLine":13,"endColumn":13},{"ruleId":"36","severity":1,"message":"41","line":14,"column":10,"nodeType":"38","messageId":"39","endLine":14,"endColumn":15},{"ruleId":"36","severity":1,"message":"42","line":15,"column":10,"nodeType":"38","messageId":"39","endLine":15,"endColumn":13},{"ruleId":"36","severity":1,"message":"43","line":16,"column":10,"nodeType":"38","messageId":"39","endLine":16,"endColumn":13},{"ruleId":"36","severity":1,"message":"44","line":17,"column":10,"nodeType":"38","messageId":"39","endLine":17,"endColumn":18},{"ruleId":"45","severity":1,"message":"46","line":6,"column":13,"nodeType":"47","endLine":6,"endColumn":24},{"ruleId":"36","severity":1,"message":"48","line":14,"column":18,"nodeType":"38","messageId":"39","endLine":14,"endColumn":26},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'greetings' is assigned a value but never used.","Identifier","unusedVar","'age' is assigned a value but never used.","'prodi' is assigned a value but never used.","'khs' is assigned a value but never used.","'ips' is assigned a value but never used.","'univLink' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setBlogs' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]